package com.ludumdare{	import fl.motion.Color;		import flash.display.MovieClip;	import flash.events.Event;	import flash.media.Sound;	import flash.media.SoundChannel;	import flash.media.SoundTransform;		public class Level extends MovieClip	{		var scenario:int=0;		var fenceBuilt:Boolean=false;		var notePlaced:Boolean=false;		var flowerPicked:Boolean=false;		var heartCarved:Boolean=false;		var fadeActivated:Boolean=false;				var atHouse:Boolean=false;				var characterIsBoy=true;				public var mButton:MenuButton = new MenuButton();				var letter:Letter = new Letter();				private var taskCompletedSFX:sfxCompleted = new sfxCompleted();		private var sfxSoundChannel:SoundChannel = new SoundChannel();		private var sfxSoundTransform:SoundTransform = new SoundTransform(0.5,0);				public function Level()		{			super();			this.addEventListener(Event.ENTER_FRAME, update);						restart();		}				public function restart(){			storyText.text="His world was tiny. And he looked for her.";			swapCharacterTo("Boy");			scenario=1;			player.visible=true;			friend.visible=true;			player.rotation=180;			friend.rotation=0;			world.gotoAndStop(1);			mButton.alpha=0;			fence.alpha=note.alpha=0;			flower.alpha=1;			fenceBuilt=notePlaced=flowerPicked=heartCarved=fadeActivated=atHouse=sawHouse=sawFence=visitedGrave=readNote=backAtHouse=pastBrokenPromise=pastFalseHope=pastDedication=acceptedInevitable=embraced=menuBtnAdded=player.disabled=false;		}				public function scenarioOne():void{			//avoidance			if(fenceBuilt && flowerPicked && notePlaced && heartCarved){				goToHouse();			}else{				avoid();			}			trace(player.rotation);						//CARVE HEART INTRO TREE			if(player.rotation>-95 && player.rotation<-82){				if(carving.alpha<1){					carving.alpha+=0.025;				}else{					if(!heartCarved){						storyText.text="He made a carving. A reminder of their time here.";						heartCarved=true;						sfxSoundChannel = taskCompletedSFX.play();					}				}			}else if(carving.alpha>0 && carving.alpha!=1 && !heartCarved){				carving.alpha-=0.01;			}			//LEAVE A NOTE			if(player.rotation>-13 && player.rotation<13){				if(note.alpha<1){					note.alpha+=0.025;				}else{					if(!notePlaced){						storyText.text="He couldn't find her so he left a note.";						notePlaced=true;						sfxSoundChannel = taskCompletedSFX.play();					}				}			}else if(note.alpha>0 && note.alpha!=1 && !notePlaced){				note.alpha-=0.010;			}						//PICK A FLOWER			if(player.rotation<-110 && player.rotation>-124){				if(flower.alpha>0){					flower.alpha-=0.025;				}else{					if(!flowerPicked){						storyText.text="He picked a flower. Her favorite.";						flowerPicked=true;						sfxSoundChannel = taskCompletedSFX.play();					}				}							}else if(flower.alpha!=0 && flower.alpha<1 && !flowerPicked){				flower.alpha+=0.005;			}						//BUILD FENCE			if(player.rotation>60 && player.rotation<120){				if(fence.alpha<1){					fence.alpha+=0.010;				}else{					if(!fenceBuilt){						storyText.text="He built a fence for her. She always wanted one.";						fenceBuilt=true;						sfxSoundChannel = taskCompletedSFX.play();					}				}			}else if(fence.alpha>0 && fence.alpha!=1 && !fenceBuilt){				fence.alpha-=0.010;			}						//AT HOUSE			if(player.rotation>172 && player.rotation<188 && atHouse && characterIsBoy){				storyText.text="He found her at his house. She won't stop crying.";				fadeActivated=true;			}						if(fadeActivated){				if(fade.alpha<1){					fade.alpha+=0.01;				}else{					world.gotoAndStop(2);					swapCharacterTo("Girl");					player.rotation=0;					friend.visible=false;					fadeActivated=false;				}			}else{				if(fade.alpha>0){					fade.alpha-=0.01;					if(fenceBuilt && flowerPicked && notePlaced && heartCarved){						storyText.text="Her world was tiny. And she was alone";					}					if(fade.alpha<=0){						scenario=2;					}				}			}		}		var sawHouse:Boolean=false;		var sawFence:Boolean=false;		var visitedGrave:Boolean=false;		var readNote:Boolean=false;		var backAtHouse:Boolean=false;				public function scenarioTwo():void{			//trace(player.rotation);			//READ NOTE			if(player.rotation>-20 && player.rotation<-15 && !backAtHouse){				storyText.text="She read the note. But already knew the words.";				if(!readNote){					sfxSoundChannel = taskCompletedSFX.play();				}				readNote=true;			}						//VISIT GRAVE			if(player.rotation>-96 && player.rotation<-86 && !backAtHouse){				storyText.text="She visited the grave. There were no flowers to pick.";				if(!visitedGrave){					sfxSoundChannel = taskCompletedSFX.play();				}				visitedGrave=true;			}						//HOUSE			if(player.rotation>172 && player.rotation<188 && !backAtHouse){				storyText.text="His house was falling apart. And still empty.";				if(!sawHouse){					sfxSoundChannel = taskCompletedSFX.play();				}				sawHouse=true;			}			//FENCE			if(player.rotation>55 && player.rotation<121 && !backAtHouse){				storyText.text="The fence stood strong. He was always good at building.";				if(!sawFence){					sfxSoundChannel = taskCompletedSFX.play();				}				sawFence=true;			}						//BACK TO HOUSE			if(player.rotation>-4 && player.rotation<4 && readNote && visitedGrave && sawHouse && sawFence && !characterIsBoy){				storyText.text="Her daily routine only led to sadness. He wouldn't want that."				backAtHouse=true;				fadeActivated=true;			}						if(fadeActivated){				if(fade.alpha<1){					fade.alpha+=0.01;				}else{					world.gotoAndStop(1);					swapCharacterTo("Boy");					player.rotation=180;					friend.visible=true;					fadeActivated=false;									}			}else{				if(fade.alpha>0){					fade.alpha-=0.01;					if(readNote && visitedGrave && sawHouse && sawFence){						storyText.text="Together, they reflected.";						follow();					}					if(fade.alpha<=0){						scenario=3;					}				}			}		}				private var pastBrokenPromise=false;		private var pastFalseHope=false;		private var pastDedication=false;		private var acceptedInevitable=false;		private var embraced=false;		private var menuBtnAdded:Boolean=false;		public function scenarioThree(){						if(!acceptedInevitable){				follow();			}						//PAST THE TREE			if(player.rotation>-96 && player.rotation<-86 && !pastBrokenPromise){				storyText.text="..a lasting symbol";				pastBrokenPromise=true;				sfxSoundChannel = taskCompletedSFX.play();			}						//PAST THE HER HOUSE			if(player.rotation>-13 && player.rotation<13 && !pastFalseHope){				storyText.text="..a heart-warming note";				pastFalseHope=true;				sfxSoundChannel = taskCompletedSFX.play();			}						//PAST THE FENCE			if(player.rotation>55 && player.rotation<121 && !pastDedication){				storyText.text="..hours of commitment";				pastDedication=true;				sfxSoundChannel = taskCompletedSFX.play();			}						//PAST HIS HOUSE			if(player.rotation>172 && player.rotation<188 && pastDedication && pastFalseHope && pastBrokenPromise && !acceptedInevitable){				storyText.text="It was time to accept the inevitable. A final goodbye."				acceptedInevitable=true;				sfxSoundChannel = taskCompletedSFX.play();			}						if(acceptedInevitable && !embraced && player.rotation<friend.rotation+5 && player.rotation>friend.rotation-5){				storyText.text="She apologized.";				sfxSoundChannel = taskCompletedSFX.play();				embraced=true;				fadeActivated=true;				var redColor:Color = new Color();				redColor.setTint(0xFF4245, 1.0);				fade.transform.colorTransform=redColor;				fade.alpha=0;			}						if(embraced && acceptedInevitable){				if(fadeActivated){					if(fade.alpha<1){						fade.alpha+=0.01;					}else{						player.disabled=true;						player.visible=false;						friend.visible=false;						fadeActivated=false;						//load letter						world.gotoAndStop(2);						storyText.text="She apologized. As if she was the problem";					}				}else{					if(fade.alpha>0){						fade.alpha-=0.01;						if(fade.alpha<=0){							mButton.alpha=0;							addChild(mButton);							mButton.x=320;							mButton.y=212;							menuBtnAdded=true;						}					}				}								if(menuBtnAdded && mButton.alpha<1){					mButton.alpha+=0.01;				}			}								}				public function update(e:Event):void{						if(scenario==1){				scenarioOne();			}else if(scenario==2){				scenarioTwo();			}else if(scenario==3){				scenarioThree();			}		}				public function avoid():void{			//avoidance			var rotationDifference:Number=player.rotation-friend.rotation;			if(Math.abs(rotationDifference)<90 || Math.abs(rotationDifference)>270){				friend.rotation+=player.currentSpeed;			}		}				public function follow():void{			var rotationDifference:Number=player.rotation-friend.rotation;			if(Math.abs(rotationDifference)>10){				friend.rotation+=player.currentSpeed;			}		}				public function goToHouse():void{			if((friend.rotation<179 || friend.rotation>181)){				friend.rotation+=player.currentSpeed;			}else{				atHouse=true;			}		}				private function swapCharacterTo(_gender:String){			var girlColor:Color = new Color();			girlColor.setTint(0xFF87D5, 1.0);			var boyColor:Color = new Color();			boyColor.setTint(0xFF4245, 1.0);			if(_gender=="Boy"){				player.transform.colorTransform=boyColor;				friend.transform.colorTransform=girlColor;				characterIsBoy=true;			}else{				player.transform.colorTransform = girlColor;				friend.transform.colorTransform = boyColor;				characterIsBoy=false;			}		}			}}